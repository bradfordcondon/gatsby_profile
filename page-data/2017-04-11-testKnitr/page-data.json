{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2017-04-11-testKnitr/","result":{"data":{"markdownRemark":{"html":"<h2>Knitting R Markdown to Jekyll</h2>\n<p>This is a test of the Knittr package and Jekyll.</p>\n<p>It looks like the original package for using knitr with Jekyll <a href=\"https://github.com/yihui/knitr-jekyll\">here</a> has fallen out of favor for Hugo, a GO-based static web-site generator.  Pretty cool, but let's see how easy it is to knit into Jekyll without using any packages.</p>\n<h2>Load in some libraries and data</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">require(ggplot2)\nrequire(knitr)\nattach(mtcars)</code></pre></div>\n<h2>Do some plots</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">head(mtcars)\n\n##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\nqplot(mpg, drat, data=mtcars, color=cyl, main=&quot;mpg vs drat mtcars&quot;)</code></pre></div>\n<p><img src=\"/assets/knitr/unnamed-chunk-2-1.svg\" alt=\"plot of chunk unnamed-chunk-2\"></p>\n<p>Behold my beautiul plot!</p>\n<h2>Render</h2>\n<p>Next we need to get our RMD to MD, with the image paths sorted.  To do this I'll stand on the shoulders of <a href=\"https://chepec.se/2014/07/16/knitr-jekyll.html\">chepec</a> who has implemented a solution.  I created a <code class=\"language-text\">_knitr</code> directory in my Jekyll site, and I included a <code class=\"language-text\">knitr</code> folder in my <code class=\"language-text\">assets</code> folder.  Make sure you update the necessary paths in the <code class=\"language-text\">render_post.r</code> file.</p>\n<p>Now its a matter of simply sourcing the file and running <code class=\"language-text\">KnitPost</code>.  Make sure that your post titles match Jekyll requirements (start with <code class=\"language-text\">YYYY-MM-DD</code> format date).  The result is a very rapid R-studio to web post!</p>","frontmatter":{"title":"Knitting to Jekyll"}}},"pageContext":{"slug":"/2017-04-11-testKnitr/"}},"staticQueryHashes":["2744294623","3649515864"]}