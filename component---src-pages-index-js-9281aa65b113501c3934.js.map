{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["page","data","badgeTypes","useState","badgeMap","setBadge","md","className","style","maxWidth","margin","src","alt","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","textDecoration","color","frontmatter","title","date","tags","name","index","Math","floor","random","length","excerpt","rel","query"],"mappings":"2FAAA,0GAce,mBAAAA,GACb,IAAMC,EAAOD,EAAKC,KAGZC,EAAa,CACjB,UAAW,UAAW,SAAU,OAAQ,QAAS,OAAQ,WALtC,EAQQC,mBAAS,IAA/BC,EARc,KAQJC,EARI,KAYrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,KACN,kBAAC,IAAD,CAAMC,UAAW,QACf,kBAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,UAChCC,IAAI,uBACJC,IAAI,wBAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,+FAQN,kBAAC,IAAD,CAAKN,GAAG,KACLL,EAAKY,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CAAMT,UAAW,OAAQU,IAAKD,EAAKE,IACjC,kBAAC,OAAD,CACEC,GAAIH,EAAKI,OAAOC,KAChBb,MAAO,CAAEc,eAAgB,OAAQC,MAAO,YAExC,yBAAKhB,UAAU,oBAAoBS,EAAKQ,YAAYC,OACpD,yBAAKlB,UAAU,OACb,yBACEA,UAAW,OACXC,MAAO,CACLe,MAAO,SAGT,0BAAMhB,UAAU,QAAQS,EAAKQ,YAAYE,MACzC,yBAAKnB,UAAW,eACbS,EAAKQ,YAAYG,KACdX,EAAKQ,YAAYG,KAAKZ,KAAI,SAASa,EAAMC,GACzC,IAAIN,EAAQ,KAQV,OAPGnB,EAASwB,GAKZL,EAAQnB,EAASwB,IAJjBL,EAASrB,EAAW4B,KAAKC,MAAMD,KAAKE,SAAS9B,EAAW+B,SACxD7B,EAASwB,GAAQL,EACjBlB,EAASD,IAKP,kBAAC,IAAD,CACEa,IAAKY,EACLrB,MAAO,CAAEE,OAAQ,SACjBa,MAAOA,GAENK,MAIP,KAGR,yBAAKrB,UAAU,aACb,2BAAIS,EAAKkB,gBAMnB,kBAAC,OAAD,CAAMf,GAAE,UAAagB,IAAI,QAAzB,yBASH,IAAMC,EAAK","file":"component---src-pages-index-js-9281aa65b113501c3934.js","sourcesContent":["import React, {useState} from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport {\n  Badge,\n  Col,\n  Row,\n  Card,\n  CardImg,\n  CardBody,\n  CardSubtitle,\n  CardText,\n} from 'reactstrap'\n\nexport default page => {\n  const data = page.data\n\n\n  const badgeTypes = [\n    'primary', 'success', 'danger', 'info', 'light', 'dark', 'warning'\n  ]\n\n  const [badgeMap, setBadge] = useState({});\n\n\n\n  return (\n    <Layout>\n      <Row>\n        <Col md=\"3\">\n          <Card className={'mb-4'}>\n            <CardImg\n              style={{ maxWidth: 250, margin: '0 auto' }}\n              src=\"/img/condon_face.jpg\"\n              alt=\"Bradford Condon PhD\"\n            />\n            <CardBody>\n              <CardText>\n                Hello! I am a full stack web/mobile developer, data scientist,\n                and bionformatician.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md=\"9\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Card className={'mb-4'} key={node.id}>\n              <Link\n                to={node.fields.slug}\n                style={{ textDecoration: 'none', color: 'inherit' }}\n              >\n                <div className=\"card-header px-3\">{node.frontmatter.title}</div>\n                <div className=\"p-3\">\n                  <div\n                    className={'mb-2'}\n                    style={{\n                      color: '#bbb',\n                    }}\n                  >\n                    <span className=\"mr-2\">{node.frontmatter.date}</span>\n                    <div className={'float-right'}>\n                      {node.frontmatter.tags\n                        ? node.frontmatter.tags.map(function(name, index) {\n                          let color = null\n                          if (!badgeMap[name]){\n                            color =  badgeTypes[Math.floor(Math.random()*badgeTypes.length)];\n                            badgeMap[name] = color\n                            setBadge(badgeMap)\n                          } else {\n                            color = badgeMap[name]\n                          }\n                            return (\n                              <Badge\n                                key={index}\n                                style={{ margin: '0 2px' }}\n                                color={color}\n                              >\n                                {name}\n                              </Badge>\n                            )\n                          })\n                        : ''}\n                    </div>\n                  </div>\n                  <div className=\"card-text\">\n                    <p>{node.excerpt}</p>\n                  </div>\n                </div>\n              </Link>\n            </Card>\n          ))}\n          <Link to={`/blog/1`} rel=\"next\">\n            Read More Posts â†’\n          </Link>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 6\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}