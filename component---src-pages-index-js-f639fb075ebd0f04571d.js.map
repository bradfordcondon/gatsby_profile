{"version":3,"file":"component---src-pages-index-js-f639fb075ebd0f04571d.js","mappings":"wKAkDA,UAAeA,IACb,MAAMC,EAAOD,EAAKC,KACZC,EAAa,CACjB,UAAW,UAAW,SAAU,OAAQ,QAAS,OAAQ,YAIrD,EAACC,EAAS,EAACC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,GAEvC,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,GAAG,KACFF,EAAAA,cAACG,EAAAA,GAAG,CAACC,GAAG,IAAIC,UAAW,wBAErBL,EAAAA,cAACM,EAAAA,GAAI,CAAED,UAAW,QAChBL,EAAAA,cAACO,EAAAA,GAAO,CACNC,MAAO,CAAGC,OAAQ,SAAUC,SAAU,KACtCC,IAAI,uBACJC,IAAI,wBAENZ,EAAAA,cAACa,EAAAA,GAAQ,KACPb,EAAAA,cAACc,EAAAA,GAAQ,KAAC,yFAMdd,EAAAA,cAACM,EAAAA,GAAI,CAACD,UAAW,QACfL,EAAAA,cAAA,KAAGe,KAAK,0BACNf,EAAAA,cAACO,EAAAA,GAAO,CACNC,MAAO,CAACC,OAAQ,UAChBE,IAAI,iBACJC,IAAI,6BAGRZ,EAAAA,cAACa,EAAAA,GAAQ,KACPb,EAAAA,cAACc,EAAAA,GAAQ,KAAC,4IAOhBd,EAAAA,cAACG,EAAAA,GAAG,CAACC,GAAG,KACLT,EAAKqB,kBAAkBC,MAAMC,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACzCnB,EAAAA,cAACM,EAAAA,GAAI,CAACD,UAAW,OAAQgB,IAAKD,EAAKE,IACjCtB,EAAAA,cAACuB,EAAAA,KAAI,CACHC,GAAIJ,EAAKK,OAAOC,KAChBlB,MAAO,CAAEmB,eAAgB,OAAQC,MAAO,YAExC5B,EAAAA,cAAA,OAAKK,UAAU,oBAAoBe,EAAKS,YAAYC,OACpD9B,EAAAA,cAAA,OAAKK,UAAU,OACbL,EAAAA,cAAA,OACEK,UAAW,OACXG,MAAO,CACLoB,MAAO,SAGT5B,EAAAA,cAAA,QAAMK,UAAU,QAAQe,EAAKS,YAAYE,MACzC/B,EAAAA,cAAA,OAAKK,UAAW,eACbe,EAAKS,YAAYG,KACdZ,EAAKS,YAAYG,KAAKd,KAAI,SAAUe,EAAMC,GAC1C,IAAIN,EAAQ,KAQZ,OAPK/B,EAASoC,GAKZL,EAAQ/B,EAASoC,IAJjBL,EAAQhC,EAAWuC,KAAKC,MAAMD,KAAKE,SAAWzC,EAAW0C,SACzDzC,EAASoC,GAAQL,EACjB9B,EAASD,IAKTG,EAAAA,cAACuC,EAAAA,GAAK,CACJlB,IAAKa,EACL1B,MAAO,CAAEC,OAAQ,SACjBmB,MAAOA,GAENK,EAGP,IACE,KAGRjC,EAAAA,cAAA,OAAKK,UAAU,aACbL,EAAAA,cAAA,SAAIoB,EAAKoB,YAIV,IAETxC,EAAAA,cAACuB,EAAAA,KAAI,CAACC,GAAE,UAAaiB,IAAI,QAAO,uBAOzC,C","sources":["webpack://bcondon-website/./src/pages/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport {\n  Badge,\n  Col,\n  Row,\n  Card,\n  CardImg,\n  CardBody,\n\n  CardText,\n} from 'reactstrap'\n//import Typist from 'react-typist-component';\n\n\n\n// const standardDelay=5000\n\n// const NameSplash = () => {\n//   return (\n//       <div className=\"splash\">\n//         <div className=\"splash__container\">\n//           <p class=\"splash__container__text\">\n//             Bradford Condon {\" \"}\n//             <Typist typingDelay={100} loop={true} >\n//               <Typist.Delay ms={standardDelay} />\n//               <span>PhD</span>\n//               <Typist.Delay ms={standardDelay} />\n//               <Typist.Backspace count={100}  />\n//               <span>Web Developer</span>\n//               <Typist.Delay ms={standardDelay} />\n//               <Typist.Backspace count={100}  />\n//               <span>Scientist</span>\n//               <Typist.Delay ms={standardDelay} />\n//               <Typist.Backspace count={100}  />\n//               <span>Dog Person</span>\n//               <Typist.Delay ms={standardDelay} />\n//               <Typist.Backspace count={100} />\n//               <span>Computer Person</span>\n//               <Typist.Delay ms={standardDelay} />\n//               <Typist.Backspace count={100}  />\n//             </Typist>\n//           </p>\n//         </div>\n//       </div>\n//   )\n// }\n\n\nexport default page => {\n  const data = page.data\n  const badgeTypes = [\n    'primary', 'success', 'danger', 'info', 'light', 'dark', 'warning'\n  ]\n\n\n  const [badgeMap, setBadge] = useState({});\n\n  return (\n    <Layout>\n      <Row>\n        <Col md=\"3\" className =\"d-sm-none d-md-block\"> \n        {/* Above d-sm-none should hide it on small, but isnt working */}\n          <Card  className={'mb-4'}>\n            <CardImg\n              style={{  margin: '0 auto', maxWidth: 250 }}\n              src=\"/img/condon_face.jpg\"\n              alt=\"Bradford Condon PhD\"\n            />\n            <CardBody>\n              <CardText>\n                Hello! I am a full stack web/mobile developer, data scientist,\n                and bionformatician.\n              </CardText>\n            </CardBody>\n          </Card>\n          <Card className={'mb-4'}>\n            <a href=\"https://www.cabem.com/\">\n              <CardImg\n                style={{margin: '0 auto' }}\n                src=\"/img/cabem.png\"\n                alt=\"CABEM TECHNOLOGIES LOGO\"\n              />\n            </a>\n            <CardBody>\n              <CardText>\n                I am currently the the Director of Technologies at CABEM Technologies.  CABEM is proudly in-house and US-based: please no soliciting.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md=\"9\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Card className={'mb-4'} key={node.id}>\n              <Link\n                to={node.fields.slug}\n                style={{ textDecoration: 'none', color: 'inherit' }}\n              >\n                <div className=\"card-header px-3\">{node.frontmatter.title}</div>\n                <div className=\"p-3\">\n                  <div\n                    className={'mb-2'}\n                    style={{\n                      color: '#bbb',\n                    }}\n                  >\n                    <span className=\"mr-2\">{node.frontmatter.date}</span>\n                    <div className={'float-right'}>\n                      {node.frontmatter.tags\n                        ? node.frontmatter.tags.map(function (name, index) {\n                          let color = null\n                          if (!badgeMap[name]) {\n                            color = badgeTypes[Math.floor(Math.random() * badgeTypes.length)];\n                            badgeMap[name] = color\n                            setBadge(badgeMap)\n                          } else {\n                            color = badgeMap[name]\n                          }\n                          return (\n                            <Badge\n                              key={index}\n                              style={{ margin: '0 2px' }}\n                              color={color}\n                            >\n                              {name}\n                            </Badge>\n                          )\n                        })\n                        : ''}\n                    </div>\n                  </div>\n                  <div className=\"card-text\">\n                    <p>{node.excerpt}</p>\n                  </div>\n                </div>\n              </Link>\n            </Card>\n          ))}\n          <Link to={`/blog/1`} rel=\"next\">\n            Read More Posts â†’\n          </Link>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 3\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"names":["page","data","badgeTypes","badgeMap","setBadge","useState","React","Layout","Row","Col","md","className","Card","CardImg","style","margin","maxWidth","src","alt","CardBody","CardText","href","allMarkdownRemark","edges","map","_ref","node","key","id","Link","to","fields","slug","textDecoration","color","frontmatter","title","date","tags","name","index","Math","floor","random","length","Badge","excerpt","rel"],"sourceRoot":""}