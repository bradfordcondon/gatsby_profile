{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_exports__","page","data","colorBadge","drupal","tripal","documentation","chado","databases","bioinformatics","web-dev","travis-ci","d3","mysql","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","md","className","style","maxWidth","margin","src","alt","allMarkdownRemark","edges","map","_ref","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","textDecoration","color","frontmatter","title","date","tags","name","index","excerpt","rel","query"],"mappings":"kMAOeA,EAAA,iBAACC,GACZ,IAAMC,EAAOD,EAAKC,KAEZC,EAAa,CACfC,OAAU,UACVC,OAAU,UACVC,cAAiB,SACjBC,MAAS,OACTC,UAAa,UACbC,eAAkB,QAClBC,UAAW,UACXC,YAAa,OACbC,GAAM,UACNC,MAAS,QAGb,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACJH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KACJL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAME,UAAW,QACbN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASG,MAAO,CAACC,SAAU,IAAKC,OAAQ,UAAWC,IAAI,uBAC9CC,IAAI,wBACbX,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,4FAEAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,8BAAgCJ,EAAAC,EAAAC,cAAA,mBAAhC,wCAKZF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KACHjB,EAAKwB,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OAC9BhB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAME,UAAW,OAAQW,IAAKD,EAAKE,IAC/BlB,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CACIC,GAAIJ,EAAKK,OAAOC,KAChBf,MAAO,CAACgB,eAAgB,OAAQC,MAAO,YACvCxB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACVU,EAAKS,YAAYC,OAEtB1B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAW,OAAQC,MAAO,CAC3BiB,MAAO,SAEPxB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAQU,EAAKS,YAAYE,MACzC3B,EAAAC,EAAAC,cAAA,OAAKI,UAAW,eAERU,EAAKS,YAAYG,KACXZ,EAAKS,YAAYG,KAAKd,IAAI,SAAUe,EAAMC,GAExC,IAAIN,EAAQnC,EAAWwC,GACjBxC,EAAWwC,GACX,YAEN,OACI7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIa,IAAKa,EACLvB,MAAO,CAACE,OAAQ,SAChBe,MAAOA,GACNK,KAIX,KAIlB7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,SAAIc,EAAKe,eAM7B/B,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMC,GAAE,UAAaY,IAAI,QAAzB,yBAQT,IAAMC,EAAK","file":"component---src-pages-index-js-866a30dfdf397833192b.js","sourcesContent":["import React from \"react\"\nimport {css} from \"react-emotion\"\nimport {Link, graphql} from \"gatsby\"\n//import { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport {Badge, Col, Row, Card, CardImg, CardTitle, CardBody, CardSubtitle, CardText} from \"reactstrap\";\n\nexport default (page) => {\n    const data = page.data\n\n    const colorBadge = {\n        'drupal': \"primary\",\n        'tripal': \"success\",\n        'documentation': \"danger\",\n        'chado': 'info',\n        'databases': 'primary',\n        'bioinformatics': 'light',\n        'web-dev': 'warning',\n        'travis-ci': 'dark',\n        'd3': 'success',\n        'mysql': \"info\"\n    }\n\n    return (<Layout>\n        <Row>\n            <Col md=\"3\">\n                <Card className={'mb-4'}>\n                    <CardImg style={{maxWidth: 250, margin: '0 auto'}} src=\"/img/condon_face.jpg\"\n                             alt=\"Bradford Condon PhD\"/>\n                    <CardBody>\n                        <CardText>Hello! I am a full stack web/mobile developer, data scientist, and\n                            bionformatician.</CardText>\n                        <CardText>If you're looking for <b>Tripal</b> help, you're in the right place.</CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n\n            <Col md=\"9\">\n                {data.allMarkdownRemark.edges.map(({node}) => (\n                    <Card className={\"mb-4\"} key={node.id}>\n                        <Link\n                            to={node.fields.slug}\n                            style={{textDecoration: 'none', color: 'inherit'}}>\n                            <div className=\"card-header px-3\">\n                                {node.frontmatter.title}\n                            </div>\n                            <div className=\"p-3\">\n                                <div className={'mb-2'} style={{\n                                    color: '#bbb',\n                                }}>\n                                    <span className=\"mr-2\">{node.frontmatter.date}</span>\n                                    <div className={'float-right'}>\n                                        {\n                                            node.frontmatter.tags\n                                                ? node.frontmatter.tags.map(function (name, index) {\n\n                                                    let color = colorBadge[name]\n                                                        ? colorBadge[name]\n                                                        : \"secondary\"\n\n                                                    return (\n                                                        <Badge\n                                                            key={index}\n                                                            style={{margin: '0 2px'}}\n                                                            color={color}>\n                                                            {name}\n                                                        </Badge>\n                                                    )\n                                                })\n                                                : ''\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"card-text\">\n                                    <p>{node.excerpt}</p>\n                                </div>\n                            </div>\n                        </Link>\n                    </Card>))\n                }\n                <Link to={`/blog/1`} rel=\"next\">\n                  Read More Posts â†’\n                </Link>\n            </Col>\n        </Row>\n    </Layout>)\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 6\n      sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}