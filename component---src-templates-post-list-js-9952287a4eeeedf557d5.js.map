{"version":3,"file":"component---src-templates-post-list-js-9952287a4eeeedf557d5.js","mappings":"kOAiBmB,IAEEA,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAqI1B,OArI0BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC3BC,OAAA,WACEC,QAAQC,IAAIC,KAAKC,OAIjB,MAAMC,EAAOF,KAAKC,MAAMC,KAClBC,EAAa,CACjBC,OAAQ,UACRC,OAAQ,UACRC,cAAe,SACfC,MAAO,OACPC,UAAW,UACXC,eAAgB,QAChB,UAAW,UACX,YAAa,OACbC,GAAI,UACJC,MAAO,SAGH,YAAEC,EAAW,SAAEC,GAAab,KAAKC,MAAMa,YACvCC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EAAWL,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGM,WAC3DC,GAAYP,EAAc,GAAGM,WAEnC,OACEE,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,GAAG,KACFF,EAAAA,cAACG,EAAAA,GAAG,CAACC,GAAG,KACNJ,EAAAA,cAACK,EAAAA,GAAI,CAACC,UAAW,QACfN,EAAAA,cAACO,EAAAA,GAAO,CACNC,MAAO,CACLC,SAAU,IACVC,OAAQ,UAEVC,IAAI,uBACJC,IAAI,wBAENZ,EAAAA,cAACa,EAAAA,GAAQ,KACPb,EAAAA,cAACc,EAAAA,GAAQ,KAAC,uFAIVd,EAAAA,cAACc,EAAAA,GAAQ,KAAC,wBAERd,EAAAA,cAAA,SAAG,UAAU,uCAOrBA,EAAAA,cAACG,EAAAA,GAAG,CAACC,GAAG,KACLtB,EAAKiC,kBAAkBC,MAAMC,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACzClB,EAAAA,cAACK,EAAAA,GAAI,CAACC,UAAW,OAAQc,IAAKD,EAAKE,IACjCrB,EAAAA,cAACsB,EAAAA,KAAI,CACHC,GAAIJ,EAAKK,OAAOC,KAChBjB,MAAO,CACLkB,eAAgB,OAChBC,MAAO,YAGT3B,EAAAA,cAAA,OAAKM,UAAU,oBACZa,EAAKS,YAAYC,OAEpB7B,EAAAA,cAAA,OAAKM,UAAU,OACbN,EAAAA,cAAA,OACEM,UAAW,OACXE,MAAO,CACLmB,MAAO,SAGT3B,EAAAA,cAAA,QAAMM,UAAU,QAAQa,EAAKS,YAAYE,MACzC9B,EAAAA,cAAA,OAAKM,UAAW,eACba,EAAKS,YAAYG,KACdZ,EAAKS,YAAYG,KAAKd,KAAI,SAASe,EAAMC,GACvC,IAAIN,EAAQ5C,EAAWiD,GACnBjD,EAAWiD,GACX,YAEJ,OACEhC,EAAAA,cAACkC,EAAAA,GAAK,CACJd,IAAKa,EACLzB,MAAO,CACLE,OAAQ,SAEViB,MAAOA,GAENK,EAGP,IACA,KAGRhC,EAAAA,cAAA,OAAKM,UAAU,aACbN,EAAAA,cAAA,SAAImB,EAAKgB,YAIV,IAETnC,EAAAA,cAACoC,EAAAA,GAAG,MACAzC,GACAK,EAAAA,cAACqC,EAAAA,GAAO,KACNrC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,KAAI,SAAW1C,EAAY2C,IAAI,QAAO,oBAKlDC,MAAMC,KAAK,CAAEC,OAAQlD,IAAY,CAACmD,EAAGC,IACpC7C,EAAAA,cAACqC,EAAAA,GAAO,KACNrC,EAAAA,cAACsC,EAAAA,GAAO,CACNC,KAAI,SAAWM,GAEdA,EAAI,OAKTjD,GACAI,EAAAA,cAACqC,EAAAA,GAAO,KACNrC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,KAAI,SAAWxC,EAAYyC,IAAI,QAAO,mBAU/D,EAACrE,CAAA,CArI0B,CAAS2E,EAAAA,U,kBCnBtC,MAAM,IAAIC,MACR,2K","sources":["webpack://bcondon-website/./src/templates/post-list.js","webpack://bcondon-website/./node_modules/react-emotion/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { css } from 'react-emotion'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport {\n  Badge,\n  Col,\n  Row,\n  Card,\n  CardImg,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\n\nexport default class PostList extends Component {\n  render() {\n    console.log(this.props)\n\n    //export default(page) => {\n    //  const data = page.data\n    const data = this.props.data\n    const colorBadge = {\n      drupal: 'primary',\n      tripal: 'success',\n      documentation: 'danger',\n      chado: 'info',\n      databases: 'primary',\n      bioinformatics: 'light',\n      'web-dev': 'warning',\n      'travis-ci': 'dark',\n      d3: 'success',\n      mysql: 'info',\n    }\n    //Page location\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 0\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 0 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <Layout>\n        <Row>\n          <Col md=\"3\">\n            <Card className={'mb-4'}>\n              <CardImg\n                style={{\n                  maxWidth: 250,\n                  margin: '0 auto',\n                }}\n                src=\"/img/condon_face.jpg\"\n                alt=\"Bradford Condon PhD\"\n              />\n              <CardBody>\n                <CardText>\n                  Hello! I am a full stack web/mobile developer, data scientist,\n                  and bionformatician.\n                </CardText>\n                <CardText>\n                  If you're looking for\n                  <b>Tripal</b>\n                  help, you're in the right place.\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"9\">\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n              <Card className={'mb-4'} key={node.id}>\n                <Link\n                  to={node.fields.slug}\n                  style={{\n                    textDecoration: 'none',\n                    color: 'inherit',\n                  }}\n                >\n                  <div className=\"card-header px-3\">\n                    {node.frontmatter.title}\n                  </div>\n                  <div className=\"p-3\">\n                    <div\n                      className={'mb-2'}\n                      style={{\n                        color: '#bbb',\n                      }}\n                    >\n                      <span className=\"mr-2\">{node.frontmatter.date}</span>\n                      <div className={'float-right'}>\n                        {node.frontmatter.tags\n                          ? node.frontmatter.tags.map(function(name, index) {\n                              let color = colorBadge[name]\n                                ? colorBadge[name]\n                                : 'secondary'\n\n                              return (\n                                <Badge\n                                  key={index}\n                                  style={{\n                                    margin: '0 2px',\n                                  }}\n                                  color={color}\n                                >\n                                  {name}\n                                </Badge>\n                              )\n                            })\n                          : ''}\n                      </div>\n                    </div>\n                    <div className=\"card-text\">\n                      <p>{node.excerpt}</p>\n                    </div>\n                  </div>\n                </Link>\n              </Card>\n            ))}\n            <Nav>\n              {!isFirst && (\n                <NavItem>\n                  <NavLink href={`/blog/${prevPage}`} rel=\"prev\">\n                    ← Previous Page\n                  </NavLink>\n                </NavItem>\n              )}\n              {Array.from({ length: numPages }, (_, i) => (\n                <NavItem>\n                  <NavLink\n                    href={`/blog/${i}`}\n                  >\n                    {i + 1}\n                  </NavLink>\n                </NavItem>\n              ))}\n\n              {!isLast && (\n                <NavItem>\n                  <NavLink href={`/blog/${nextPage}`} rel=\"next\">\n                    Next Page →\n                  </NavLink>\n                </NavItem>\n              )}\n            </Nav>\n          </Col>\n        </Row>\n      </Layout>\n    )\n  }\n}\n\nexport const pagesQuery = graphql`\n\n\nquery pagesQuery($skip: Int!, $limit: Int!) {\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}, limit: $limit, skip: $skip) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date(formatString: \"DD MMMM, YYYY\")\n          tags\n        }\n        fields {\n          slug\n        }\n        excerpt\n      }\n    }\n  }\n}\n`\n","throw new Error(\n  'The package \"react-emotion\" has been replaced by \"@emotion/styled\" in version 10. See https://emotion.sh/docs/migrating-to-emotion-10 for more information on migrating.'\n);\n"],"names":["PostList","_Component","apply","arguments","_inheritsLoose","prototype","render","console","log","this","props","data","colorBadge","drupal","tripal","documentation","chado","databases","bioinformatics","d3","mysql","currentPage","numPages","pageContext","isFirst","isLast","prevPage","toString","nextPage","React","Layout","Row","Col","md","Card","className","CardImg","style","maxWidth","margin","src","alt","CardBody","CardText","allMarkdownRemark","edges","map","_ref","node","key","id","Link","to","fields","slug","textDecoration","color","frontmatter","title","date","tags","name","index","Badge","excerpt","Nav","NavItem","NavLink","href","rel","Array","from","length","_","i","Component","Error"],"sourceRoot":""}